openapi: 3.0.0
info:
  title: Payment Connector
  version: 1.0.0
  description: 'Specification for payment connector, an application to allow the reuse of communications from our products with other payment platforms'
  contact:
    name: Aftersale
    url: 'https://after.sale'
servers:
  - url: https
tags:
  - name: settings
    description: Everything about this connector
  - name: voucher
    description: Access to voucher creation
  - name: credit-card
    description: Access to credit card refund
paths:
  /settings:
    get:
      summary: Configuration
      tags:
        - settings
      operationId: get-settings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingsGet200Response'
              examples:
                get-response-settings-example:
                  value:
                    success: true
                    data:
                      name: PayPearl
                      description: Clam up and give my money
                      image_url: 'http://www.notarealsite.domain.com/paypearl_logo.png'
                      auth_fields:
                        - key: username
                          label: Username
                        - key: password
                          label: Password
                      custom_fields:
                        - key: cpf
                          label: Cadastro de Pessoa FÃ­sica
                          default_value: null
                          required: true
                          services:
                            - refunds.voucher
                            - refunds.credit-card
                        - key: rg
                          label: Registro Geral
                          default_value: null
                          required: false
                          services:
                            - refunds.credit-card
                      service_queue:
                        service_name: service_bus
                        queue_name: queue-payment-paypearl
                        services:
                          - refunds.voucher
                      services:
                        - id: refunds.voucher
                          params:
                            compatible_fields:
                              - key: cpf
                                validation:
                                  required: true
                        - id: refunds.credit-card
                          params:
                            compatible_fields:
                              - key: cpf
                                validation:
                                  required: true
                              - key: rg
                                validation:
                                  required: false
      description: This allows understand what this connector is and what it can do
  /refunds/credit-card:
    post:
      summary: Credit card refund creation
      tags:
        - credit-card
      operationId: post-refunds-credit-card
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefundCreditCardPost200Response'
              examples:
                post-response-refunds-credit-card-example:
                  value:
                    success: true
                    data:
                      transaction_id: 1A2B3C4D5E
        '422':
          $ref: '#/components/responses/Default422Response'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefundCreditCardPostBody'
            examples:
              post-body-refunds-credit-card-example:
                value:
                  amount: 2.6
                  email: email@email.com
                  refund_items:
                    - quantity: 2
                      sku: 123456ABCDEF
                      unitary_value: 1.3
                  free_shipping: true
                  free_shipping_amount: 1.1
                  custom_fields:
                    cpf: '11111111111'
                    rg: '2222222'
      description: This allows credit card refund on an integration
  /refunds/voucher:
    post:
      summary: Voucher creation
      tags:
        - voucher
      operationId: post-refunds-voucher
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefundVoucherPost201Response'
              examples:
                post-response-refunds-voucher-example:
                  value:
                    success: true
                    data:
                      voucher_code: A1B2C3D4E5
        '422':
          $ref: '#/components/responses/Default422Response'
      description: This allows voucher creation on an integration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefundVoucherPostBody'
            examples:
              post-body-refunds-voucher-example:
                value:
                  amount: 1.5
                  type: credit
                  order_id: '1234567890'
                  refund_items:
                    - quantity: 1
                      sku: ABCDEF123456
                      unitary_value: 1.5
                  free_shipping: false
                  expiring_days: 60
                  custom_fields:
                    cpf: '11111111111'
components:
  schemas:
    RefundItemArrayOfObjects:
      title: RefundItemArrayOfObjects
      type: array
      description: Item(s) to be refunded
      items:
        type: object
        description: A object containing information of the item to be refunded
        properties:
          quantity:
            type: integer
            description: Quantity of items to be refunded
          sku:
            type: string
            description: Code of the item to be refunded
          unitary_value:
            type: number
            description: Value of a single item
        required:
          - quantity
          - sku
          - unitary_value
    RefundCreditCardPostBody:
      title: RefundCreditCardPostBody
      type: object
      description: All parameters that can be sent within the JSON payload POST request
      properties:
        amount:
          type: number
          description: Balance to be refunded
        email:
          type: string
          description: Customer email on ecommerce platform
        refund_items:
          $ref: '#/components/schemas/RefundItemArrayOfObjects'
        free_shipping:
          type: boolean
          description: If there was free shipping at the time of purchase
        free_shipping_amount:
          type: number
          description: 'Value of free shipping, if was available'
        customer_document:
          type: string
          description: 'Customer document on ecommerce platform, without mask'
        custom_fields:
          description: 'If there are any custom_field previously declared, they will be inserted inside this object'
          type: object
      required:
        - amount
    RefundCreditCardPost200Response:
      title: RefundCreditCardPost200Response
      type: object
      description: 200 response for POST method
      properties:
        success:
          type: boolean
          default: true
          description: If the operation was successful
        data:
          type: object
          required:
            - transaction_id
          description: Object that holds a successful response data
          properties:
            transaction_id:
              type: string
              description: Credit card refund transaction code
      required:
        - success
        - data
    RefundVoucherPostBody:
      title: RefundVoucherPostBody
      type: object
      description: All parameters that can be sent within the JSON payload POST request
      properties:
        amount:
          type: number
          description: Balance of the voucher that will be created
        type:
          type: string
          enum:
            - credit
            - voucher
          description: Type of voucher that will be created
        order_id:
          type: string
          description: Order identification in ecommerce platform
        refund_items:
          $ref: '#/components/schemas/RefundItemArrayOfObjects'
        free_shipping:
          type: boolean
          description: If there was free shipping at the time of purchase
        free_shipping_amount:
          description: 'Value of free shipping, if was available'
          type: number
        customer_document:
          type: string
          description: 'Customer document on ecommerce platform, without mask'
        expiring_days:
          type: integer
          description: Number of days until the voucher expiration date
        custom_fields:
          type: object
          description: 'If there are any custom_field previously declared, they will be inserted inside this object'
      required:
        - amount
        - type
    RefundVoucherPost201Response:
      title: RefundVoucherPost201Response
      type: object
      description: 201 response for POST method
      properties:
        success:
          type: boolean
          description: If the operation was successful
        data:
          type: object
          description: Object that holds a successful response data
          required:
            - voucher_code
          properties:
            voucher_code:
              type: string
              description: Voucher code created in ecommerce platform
      required:
        - success
        - data
    SettingsGet200Response:
      title: SettingsGetResponse
      type: object
      description: 200 response for GET method
      properties:
        success:
          type: boolean
          default: true
          description: If the operation was successful
        data:
          type: object
          description: Object that holds a successful response data
          required:
            - name
            - services
          properties:
            name:
              type: string
              description: Connector name
            description:
              type: string
              description: Short description about connector
            image_url:
              type: string
              description: Connector logo url
            auth_fields:
              type: array
              description: |-
                Any field that the ecommerce uses for authentication
                E.g.: Tokens, logins, passwords and etc.
              items:
                type: object
                description: Extra field(s) that can be configured. Will be added to requests who require authentication
                properties:
                  key:
                    type: string
                    description: Field identifier
                  label:
                    type: string
                    description: 'Field name to be displayed in an interface, expressing what the key means'
                required:
                  - key
            custom_fields:
              type: array
              description: 'Any field not mapped by this connector, that can be configured. Will be added to the body of requests to the defined `services`'
              items:
                type: object
                description: Extra field(s) that can be configured. Will be added to the body of requests to the defined services
                properties:
                  key:
                    type: string
                    pattern: '^[a-z_]+$'
                    description: |-
                      Field identifier/attribute name. Strings are separated by underlines, `snake_case` like.
                      E.g.: "field_name"
                  label:
                    type: string
                    description: 'Field name to be displayed in an interface, expressing what the key means'
                  default_value:
                    description: 'Value for a field in case a value is not defined. Can be any value - string, number, boolean, array, object or null.'
                  required:
                    type: boolean
                    description: Indicates whether filling this field is mandatory
                  services:
                    type: array
                    description: In which services this field can be used
                    items:
                      type: string
                      pattern: '^[a-z-._]+$'
                required:
                  - key
                  - required
                  - services
            service_queue:
              type: object
              description: 'Information about queuing service, only if this connector uses'
              properties:
                service_name:
                  type: string
                  description: An identification/name for the queue service
                queue_name:
                  type: string
                  description: The name of the queue within the queuing service
                services:
                  type: array
                  description: In which services the queue will be used
                  items:
                    type: string
                    pattern: '^[a-z-._]+$'
              required:
                - service_name
                - queue_name
                - services
            services:
              type: array
              description: Services avaiable for this connector. This is where the provided `custom_fields` (if there is any) will be declared and used
              items:
                type: object
                description: Object that holds the services and their params
                properties:
                  id:
                    type: string
                    description: |-
                      Service identifier, which indicates which parameters belong to the endpoint. A url directory path is a dot and strings are separated by dash `slug-case` like.
                      E.g.: /something/another-thing will be "something.another-thing"
                    pattern: '^[a-z-._]+$'
                  params:
                    type: object
                    description: Parameters that belong to this service
                    properties:
                      compatible_fields:
                        type: array
                        description: Indicates which attributes of a given field is compatible
                        items:
                          type: object
                          description: Object that holds compatible fields attributes
                          properties:
                            key:
                              type: string
                              pattern: '^[a-z_]+$'
                              description: |-
                                Field identifier/attribute name. Strings are separated by underlines, `snake_case` like.
                                E.g.: "field_name"
                            validation:
                              type: object
                              description: Types of validation for the value of a given attribute
                              properties:
                                required:
                                  type: boolean
                                  description: Indicates if the field must have a value or not
                              required:
                                - required
                          required:
                            - key
                required:
                  - id
      required:
        - success
        - data
  responses:
    Default422Response:
      description: Unprocessable Entity
      content:
        application/json:
          schema:
            type: object
            description: Object that holds an error response
            properties:
              success:
                type: boolean
                default: false
                description: If the operation was successful
              error:
                type: object
                description: Object that holds a unsuccessful response error
                required:
                  - message
                  - debug_data
                properties:
                  code:
                    type: integer
                    description: Code associated with the operation error
                  message:
                    type: string
                    description: Message associated with the operation error
                  debug_data:
                    type: object
                    description: Debugging information associated with the operation error
            required:
              - success
              - error
          examples:
            error-response-example:
              value:
                success: false
                error:
                  code: 1
                  message: Some error message
                  debug_data: {}
